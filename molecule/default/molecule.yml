---
dependency:
  name: galaxy
driver:
  name: docker
platforms:
  - name: pgbackrest-molecule-centos7-instance
    image: "centos:centos7"
  - name: pgbackrest-molecule-centos8-instance
    image: quay.io/centos/centos:stream8
  - name: pgbackrest-molecule-debian11-instance
    image: python:3-bullseye
  - name: pgbackrest-molecule-debian10-instance
    image: python:3-buster
provisioner:
  name: ansible
  options:
    tags: pgbackrest,molecule-converge-test
  playbooks:
    prepare: prepare.yml
  inventory:
    group_vars:
      all:
        pgbackrest_owner: postgres
        pgbackrest_cron_enabled: true
        pgbackrest_systemd_timer_enabled: false
    host_vars:
      pgbackrest-molecule-centos7-instance:
        pgbackrest_reload_command: "pg_ctl -D /var/lib/pgsql/data restart"
        pgbackrest_conf_cluster_stanzas:
          main:
            pg1-path: /var/lib/pgsql/data
      pgbackrest-molecule-centos8-instance:
        pgbackrest_reload_command: "pg_ctl -D /var/lib/pgsql/data restart"
        pgbackrest_conf_cluster_stanzas:
          main:
            pg1-path: /var/lib/pgsql/data
      pgbackrest-molecule-debian10-instance:
        pgbackrest_reload_command: "/usr/bin/pg_ctlcluster 11 main restart"
        pgbackrest_postgresql_conf:
          archive_command: "pgbackrest --config={{ pgbackrest_conf_path }} --stanza=main archive-push %p"
          archive_mode: "on"
          listen_addresses: "*"
          log_filename: "postgresql.log"
          log_line_prefix: ""
          max_wal_senders: 3
          wal_level: replica
        pgbackrest_conf_cluster_stanzas:
          main:
            db-path: /var/lib/postgresql/11/main
      pgbackrest-molecule-debian11-instance:
        pgbackrest_reload_command: "/usr/bin/pg_ctlcluster 13 main restart"
        pgbackrest_conf_cluster_stanzas:
          main:
            pg1-path: /var/lib/postgresql/13/main
verifier:
  name: testinfra
  options:
    verbose: true
